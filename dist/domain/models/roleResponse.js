/**
 * Represents a response generated by a role-based prompt.
 * Contains the structured output from the role's analysis.
 */
export class RoleResponse {
    _roleId;
    _roleName;
    _context;
    _analysis;
    _recommendations;
    _nextSteps;
    _codeExamples;
    constructor(_roleId, _roleName, _context, _analysis, _recommendations, _nextSteps, _codeExamples = []) {
        this._roleId = _roleId;
        this._roleName = _roleName;
        this._context = _context;
        this._analysis = _analysis;
        this._recommendations = _recommendations;
        this._nextSteps = _nextSteps;
        this._codeExamples = _codeExamples;
    }
    /**
     * Creates a new RoleResponse instance.
     * @param roleId ID of the role that generated the response
     * @param roleName Name of the role that generated the response
     * @param context The context or problem that was addressed
     * @param analysis The detailed analysis provided by the role
     * @param recommendations Key recommendations from the role
     * @param nextSteps Suggested next steps to take
     * @param codeExamples Code examples provided by the role
     * @returns A new RoleResponse instance
     */
    static create(roleId, roleName, context, analysis, recommendations, nextSteps = [], codeExamples = []) {
        if (!roleId || !roleName || !context || !analysis) {
            throw new Error("RoleResponse must have a roleId, roleName, context, and analysis");
        }
        if (!recommendations || recommendations.length === 0) {
            throw new Error("RoleResponse must have at least one recommendation");
        }
        return new RoleResponse(roleId, roleName, context, analysis, recommendations, nextSteps, codeExamples);
    }
    /**
     * Converts the response to a JSON-serializable object.
     * @returns A plain object representation of the response
     */
    toJSON() {
        return {
            roleId: this._roleId,
            roleName: this._roleName,
            context: this._context,
            analysis: this._analysis,
            recommendations: this._recommendations,
            nextSteps: this._nextSteps,
            codeExamples: this._codeExamples
        };
    }
    // Getters
    get roleId() {
        return this._roleId;
    }
    get roleName() {
        return this._roleName;
    }
    get context() {
        return this._context;
    }
    get analysis() {
        return this._analysis;
    }
    get recommendations() {
        return [...this._recommendations];
    }
    get nextSteps() {
        return [...this._nextSteps];
    }
    get codeExamples() {
        return [...this._codeExamples];
    }
}
//# sourceMappingURL=roleResponse.js.map