/**
 * Represents a response generated by a role-based prompt.
 * Contains the structured output from the role's analysis.
 */
export class RoleResponse {
  private constructor(
    private readonly _roleId: string,
    private readonly _roleName: string,
    private readonly _context: string,
    private readonly _analysis: string,
    private readonly _recommendations: string[],
    private readonly _nextSteps: string[],
    private readonly _codeExamples: string[] = []
  ) {}

  /**
   * Creates a new RoleResponse instance.
   * @param roleId ID of the role that generated the response
   * @param roleName Name of the role that generated the response
   * @param context The context or problem that was addressed
   * @param analysis The detailed analysis provided by the role
   * @param recommendations Key recommendations from the role
   * @param nextSteps Suggested next steps to take
   * @param codeExamples Code examples provided by the role
   * @returns A new RoleResponse instance
   */
  public static create(
    roleId: string,
    roleName: string,
    context: string,
    analysis: string,
    recommendations: string[],
    nextSteps: string[] = [],
    codeExamples: string[] = []
  ): RoleResponse {
    if (!roleId || !roleName || !context || !analysis) {
      throw new Error("RoleResponse must have a roleId, roleName, context, and analysis");
    }

    if (!recommendations || recommendations.length === 0) {
      throw new Error("RoleResponse must have at least one recommendation");
    }

    return new RoleResponse(
      roleId,
      roleName,
      context,
      analysis,
      recommendations,
      nextSteps,
      codeExamples
    );
  }

  /**
   * Converts the response to a JSON-serializable object.
   * @returns A plain object representation of the response
   */
  public toJSON(): Record<string, unknown> {
    return {
      roleId: this._roleId,
      roleName: this._roleName,
      context: this._context,
      analysis: this._analysis,
      recommendations: this._recommendations,
      nextSteps: this._nextSteps,
      codeExamples: this._codeExamples
    };
  }

  // Getters
  public get roleId(): string {
    return this._roleId;
  }

  public get roleName(): string {
    return this._roleName;
  }

  public get context(): string {
    return this._context;
  }

  public get analysis(): string {
    return this._analysis;
  }

  public get recommendations(): string[] {
    return [...this._recommendations];
  }

  public get nextSteps(): string[] {
    return [...this._nextSteps];
  }

  public get codeExamples(): string[] {
    return [...this._codeExamples];
  }
}
